-- Glider 4, by john calhoun
-- ported/rewritten by Ben Fisher
-- https://github.com/downpoured/glider_4

-- when editing the game, it might be useful
-- to know that you can press Shift+N and click
-- Start Over to reset the game.

-- script of cd "cdglider":

-- level data:
-- item 1:  roomname
-- item 2:  numberOObjects
-- item 3:  leftOpen
-- item 4:  rightOpen
-- item 5:  animateKind
-- item 6:  animateNumber
-- item 7:  animateDelay
-- item 8:  conditionCode

-- level objects:
-- item 1:  typename
-- item 2:  typenumber
-- item 3:  c1
-- item 4:  c2
-- item 5:  c3
-- item 6:  c4
-- item 7:  amount
-- item 8:  extra
-- item 9:  isOn

function intersectRoomObject myrect1, myrect2, myrect3, myrect4
    global curLevel, lvlObjects, propsPerObj, gcurlvldata, gcurlvlObjects
    put item 2 of gcurlvldata into numobjects
    put "" into ret
    put left of cd btn "glider_spritesme" into x0
    put top of cd btn "glider_spritesme" into y0
    put right of cd btn "glider_spritesme" into x1
    put bottom of cd btn "glider_spritesme" into y1
    repeat with i = 1 to numobjects
        put (propsPerObj * (i-1)) into j
        put  item (j+1) of gcurlvlObjects into objtypename
        if objtypename is "outlet" then
            mainloopgame_periodic i
        end if
        put the left of cd btn ("glider_sprites" & i) into boxx0
        put the top of cd btn ("glider_sprites" & i) into boxy0
        put the right of cd btn ("glider_sprites" & i) into boxx1
        put the bottom of cd btn ("glider_sprites" & i) into boxy1
        if (x0 >= boxx1 or y0 >= boxy1)  then
        -- it's way outside on the right or bottom
        else if (x1 < boxx0 or y1 < boxy0)  then
        -- it's way outside on the left or top
        else
            put "|" & i after ret
        end if
    end repeat
    return ret
end intersectRoomObject


on mainloopgame_motion
    global curLevel, propsPerObj, dx, dy, gcurlvldata, gcurlvlObjects,lastDirPressed
    global dx, dy
    if dy is "" then
        put 0 into dy
    end if
    if lastDirPressed is "-1" then
        add -22 to dx
    else if lastDirPressed is "1" then
        add 22 to dx
    end if
    put "" into lastDirPressed
    set the topleft of cd btn "glider_spritesme" to (the left of cd btn "glider_spritesme" + dx), (the top of cd btn "glider_spritesme" + dy)
    set the topleft of cd btn "glider_spritesshadow" to (the left of cd btn "glider_spritesme"), 320
end mainloopgame_motion

on mainloopgame_checkbounds
    global curLevel, propsPerObj, dx, dy, gcurlvldata, gcurlvlObjects
    put (item 3 of gcurlvldata is 1) into leftopen
    put (item 4 of gcurlvldata is 1) into rghtopen
    if the bottom of cd btn "glider_spritesme" > 328 then
        begindeath
        set the bottom of cd btn "glider_spritesme" to 328
    else if the top of cd btn "glider_spritesme" < 30 then
        set the top of cd btn "glider_spritesme" to 30
    end if
    
    if the left of cd btn "glider_spritesme" <= 0 then
        if leftopen then
            beginloadlevel curLevel - 1
            set the left of cd btn "glider_spritesme" to 450
        else
            set the left of cd btn "glider_spritesme" to 0
        end if
    else if the right of cd btn "glider_spritesme" >= 511 then
        if rghtopen then
            beginloadlevel curLevel + 1
            set the left of cd btn "glider_spritesme" to 20
        else
            set the right of cd btn "glider_spritesme" to 511
        end if
    end if
end mainloopgame_checkbounds

on newlevelbonus
    global levelsSeen, curLevel
    if line curLevel of levelsSeen is "" then
        put "1" into line (curLevel) of levelsSeen
        add 200 to cd fld "score"
    end if
end newlevelbonus

on mainloopgame_collisions
    global curLevel, propsPerObj, dx, dy, gcurlvldata, gcurlvlObjects
    global sprites_burnrght1, sprites_outletspark1
    
    put intersectRoomObject(gcurlvldata, gcurlvlObjects, the left of cd btn "glider_spritesme", the top of cd btn "glider_spritesme", the right of cd btn "glider_spritesme", the bottom of cd btn "glider_spritesme") into intersects
    put the number of items in intersects into numintersects
    put false into isdead
    
    put 0 into dx 
    put 6 into dy -- by default, we fall
    repeat with numintersect = 2 to numintersects -- ignore the first
        put item numintersect of intersects into i
        put item ((i-1)*propsPerObj+1) of gcurlvlObjects into objtypename
        put item ((i-1)*propsPerObj+7) of gcurlvlObjects into amount
        put item ((i-1)*propsPerObj+8) of gcurlvlObjects into extra
        put item ((i-1)*propsPerObj+9) of gcurlvlObjects into isOn
        
        put getCollideResult(objtypename, isOn, amount, extra) into clr
        put item 1 of clr into collideType
        put item 2 of clr into collideAmt
        
        if collideType is "crashIt" then
            begindeath
        else if collideType is "moveIt" then
            -- not yet supported
        else if collideType is "liftIt" then
            put -6 into dy
        else if collideType is "dropIt" then
            put 12 into dy
        else if collideType is "burnIt" then
            if the bottom of cd btn "glider_spritesme" >= (the bottom of cd btn ("glider_sprites" & i)-30) then
                begindeath
                set the icon of cd btn "glider_spritesme" to sprites_burnrght1
            else
                put -6 into dy
            end if
        else if collideType is "turnItLeft" then
            put -20 into dx
        else if collideType is "turnItRight" then
            put 20 into dx
        else if collideType is "lightIt" then
            -- not yet supported
        else if collideType is "zapIt" then
            if the icon of cd btn ("glider_sprites" & i) is sprites_outletspark1 then
                begindeath
                set the icon of cd btn "glider_spritesme" to sprites_burnrght1
            end if
        else if collideType is "airOnIt" then
            -- not yet supported
        else if collideType is "shredIt" then
            begindeath
        else if collideType is "descendIt" then
            beginloadlevel collideAmt
            set the top of cd btn "glider_spritesme" to 20
            set the left of cd btn "glider_spritesme" to 20
        else if collideType is "ascendIt" then
            beginloadlevel collideAmt
            set the top of cd btn "glider_spritesme" to 20
            set the left of cd btn "glider_spritesme" to 20
        else if collideType is "getitem_extraIt" then
            add 1 to cd fld "lives"
        else if collideType is "getitem_awardIt" then
            add 50 to cd fld "score"
        else if collideType is "getitem_energizeIt" then
            add 100 to cd fld "score"
        else if collideType is "getitem_bandIt" then
            add 150 to cd fld "score"
        end if
        
        if "getitem_" is in collideType then
            -- hide it since it is gone
            modifyObjectState (((i-1)*propsPerObj)+(9)), 0
            hide cd btn ("glider_sprites" & i)
        end if
    end repeat
end mainloopgame_collisions


on mainloopgame_periodic i
    global clockCount, propsPerObj, sprites_outlet, sprites_outletspark1, gcurlvldata, gcurlvlObjects
    add 1 to clockCount
    if clockCount mod 20 is 1 then
        put (propsPerObj * (i-1)) into j
        put item (j+1) of gcurlvlObjects into objtypename
        if objtypename is "outlet" then
            if the icon of cd btn ("glider_sprites" & i) is sprites_outletspark1 then
                set the icon of cd btn ("glider_sprites" & i) to sprites_outlet
            else
                set the icon of cd btn ("glider_sprites" & i) to sprites_outletspark1
            end if
        end if
    end if
end mainloopgame_periodic

on mainloopdying
    global deathcount, state, curLevel, sprites_right_forward
    if deathcount < 30 then
        put deathcount+1 into deathcount
    else
        subtract 1 from cd fld "lives"
        if cd fld "lives" < 0 then
            put "gameInactive" into state
            put -3 into curLevel
            refreshOnLevelChange
        else
            set the topleft of cd btn "glider_spritesme" to 20,20
            set the icon of cd btn "glider_spritesme" to sprites_right_forward
            put "playing" into state
            play "glider_1_BeamIn"
        end if
    end if
end mainloopdying

on mainlooploadinglevel
    global loadlevelcount, state, curLevel
    if loadlevelcount < 3 then
        put loadlevelcount+1 into loadlevelcount
        put "." after cd fld "roomname"
    else
        refreshOnLevelChange
        put "playing" into state
    end if
end mainlooploadinglevel

on beginloadlevel nextlevel
    global loadlevelcount, state, curLevel
    if nextlevel > curLevel then
        put 1 into incr
    else
        put -1 into incr
    end if
    put nextlevel into curLevel
    newlevelbonus
    if curLevel < 1 then
            put 1 into curLevel --sanity check
    else if curLevel > 40 then
            put 40 into curLevel --sanity check
    end if
    -- skipped levels we don't yet support
    if curLevel is 7 then
        put curLevel+incr into curLevel
    end if
    if curLevel is 13 then
        put curLevel+incr into curLevel
    end if
    if curLevel is 28 then
        put curLevel+incr into curLevel
    end if
    if curLevel is 29 then
        put curLevel+incr into curLevel
    end if
    if curLevel is 37 then
        put curLevel+incr into curLevel
    end if
    
    if curLevel is 26 then
        -- victory!
        put -3 into curLevel
        put "gameInactive" into state
        refreshOnLevelChange
    else
        put 0 into loadlevelcount
        put "Loading" into cd fld "roomname"
        put "loadinglevel" into state
    end if
end beginloadlevel

on idle
    global state, curLevel
    if there is a cd btn "stopall" then
        answer "stopping all"
        global curLevel, state
        put "needReset" into curLevel
        put "gameInactive" into state
        refreshOnLevelChange
        show cd btn "btn_continue"
        set the label of cd btn "btn_continue" to "Start Over"
    end if
    if state is "playing" then
        global curLevel, lvlData, lvlObjects, dx, dy, gcurlvldata, gcurlvlObjects
        -- warning: be careful that we don't warp through a solid object.
        -- for example, if you are moving at 12 pixels per update, and your height is 5 pixels, it's possible to completely slip through
        -- a solid object that is only 6 pixels wide
        put 0 into dx
        put 0 into dy
        mainloopgame_collisions
        mainloopgame_checkbounds
        mainloopgame_motion
    else if state is "dying" then
        mainloopdying
    else if state is "loadinglevel" then
        mainlooploadinglevel
    end if
end idle

on afterkeydown
    global lastDirPressed, cheatInvincible
    if "intro" is in the name of this cd then
        exit afterkeydown
    end if
    if keychar() is "ArrowLeft" then
        put "-1" into lastDirPressed
    else if keychar() is "ArrowRight" then
        put "1" into lastDirPressed
    else if keyChar() is "I" and shiftKey() and not keyrepeated() then
        answer "toggle cheatcode:invincible"
        if cheatInvincible is true then
            put false into cheatInvincible
        else
            put true into cheatInvincible
        end if
    else if keyChar() is "L" and shiftKey() and not keyrepeated() then
        answer "cheatcode:new life"
        add 1 to cd fld "lives"
    else if keyChar() is "N" and shiftKey() and not keyrepeated() then
        global curLevel, state
        put "needReset" into curLevel
        put "gameInactive" into state
        refreshOnLevelChange
        show cd btn "btn_continue"
        set the label of cd btn "btn_continue" to "Start Over"
    end if
end afterkeydown

on modifyObjectState itemnumber, newvalue
    global curLevel, gcurlvldata, gcurlvlObjects, lvlData, lvlObjects
    -- modify cached for this level
    put newvalue into item (itemnumber) of gcurlvlObjects
    -- modify global state
    put gcurlvlObjects into line (curLevel) of lvlObjects
end modifyObjectState

on begindeath
    global state, deathcount, sprites_alldeadrght, cheatInvincible
    if cheatInvincible is not true then
        put "dying" into state
        put 0 into deathcount
        set the icon of cd btn "glider_spritesme" to sprites_alldeadrght
    end if
end begindeath

on refreshOnLevelChange
    global curLevel, gcurlvldata, gcurlvlObjects, lvlData, lvlObjects
    
    repeat with x=1 to 16
        hide cd btn ("glider_sprites" & x)
    end repeat
    hide cd btn "glider_spritesme"
    hide cd btn "glider_spritesshadow"
    
    global lastDirPressed, propsPerObj
    put "" into lastDirPressed
    put 9 into propsPerObj
    set the itemdelimiter to "|"
    show cd btn "glider_bg0"
    hide cd fld "roomname"
    hide cd fld "score"
    hide cd fld "lives"
    hide cd fld "behindlives"
    hide cd btn "glider_spriteslivesicon"
    hide cd fld "gameover"
    
    show cd btn "btn_continue"
    set the idlerate to "default"
    if curLevel is "needReset" then
        exit refreshOnLevelChange
    else if curLevel is "" or curLevel is -1 then
        put -1 into curLevel
        set the icon of cd btn "glider_bg0" to 1
        set the rect of cd btn "btn_continue" to 367,22,487,96
        set the label of cd btn "btn_continue" to "New Game"
    else if curLevel is -2 then
        set the icon of cd btn "glider_bg0" to 2
        set the rect of cd btn "btn_continue" to 126,300,126+254,300+36
        set the label of cd btn "btn_continue" to "Start"
    else if curLevel is -3 then
        set the icon of cd btn "glider_bg0" to 3
        set the rect of cd btn "btn_continue" to 126,300,126+254,300+36
        set the label of cd btn "btn_continue" to "Home"
        if cd fld "lives" > 0 then
            hide cd fld "gameover"
        else
            show cd fld "gameover"
            put (newline & newline & "Game Over..." & newline & newline & "Your score was " & (cd fld "score") & ".") into cd fld "gameover"
        end if
    else
        set the idlerate to "faster"
        global sprites_shadoRght, sprites_shadoLft, sprites_right_forward, sprites_right_tipped, sprites_left_forward, sprites_left_tipped
        global sprites_turn_endpoint, sprites_right_forward2, sprites_right_tipped2, sprites_left_forward2, sprites_left_tipped2, sprites_turn_endpoint2
        global sprites_burnrght1, sprites_burnrght2, sprites_burnlft1, sprites_burnlft2, sprites_alldeadrght, sprites_alldeadlft
        global sprites_celVnt, sprites_celDct, sprites_flrVnt, sprites_paper, sprites_toastr, sprites_toast1
        global sprites_toast2, sprites_toast3, sprites_toast4, sprites_toast5, sprites_toast6, sprites_teaKtl
        global sprites_lftFan, sprites_ritFan, sprites_table, sprites_shredr, sprites_books, sprites_clock
        global sprites_candle, sprites_rbrBnd, sprites_ball, sprites_fshBwl, sprites_fish1, sprites_fish2
        global sprites_fish3, sprites_fish4, sprites_grease, sprites_greasefall1, sprites_greasefall2, sprites_litSwt
        global sprites_thermo, sprites_outlet, sprites_outletspark1, sprites_outletspark2, sprites_pwrSwt, sprites_guitar
        global sprites_drip, sprites_shelf, sprites_basket, sprites_paintg, sprites_battry, sprites_macTsh
        global sprites_upStar, sprites_dnStar, sprites_candleflame1, sprites_candleflame2, sprites_candleflame3, sprites_drop1
        global sprites_drop2, sprites_drop3, sprites_drop4, sprites_drop5
        show cd btn "glider_spritesme"
        show cd btn "glider_spritesshadow"
        show cd fld "roomname"
        show cd fld "score"
        show cd fld "lives"
        show cd fld "behindlives"
        show cd btn "glider_spriteslivesicon"
        set the icon of cd btn "glider_bg0" to 3+curLevel
        hide cd btn "btn_continue"
        global sprites_ventpatterny
        
        put 24 into kCeilingVert
		put 325 into kFloorVert
        
        put 2 into q -- need to tweak the rect of everything larger, to make the sprite show up
        
        -- actually load the room
        global curLevel, lvlData, lvlObjects, dx, dy, propsPerObj
        put line curLevel of lvlData into curlvldata
        put item 1 of curlvldata into cd fld "roomname"
        if cd fld "roomname" is "Welcome..." then
            put "Across the room..." into cd fld "roomname"
        end if
        
        -- actually load the room's objects
        put line (curLevel) of lvlObjects into curLvlObjects
        put item 2 of curlvldata into numobjects
        repeat with i = 1 to numobjects
            put (propsPerObj * (i-1))  into j
            put item (j+3) of curLvlObjects into spritex0
            put item (j+4) of curLvlObjects into spritey0
            put item (j+5) of curLvlObjects into spritex1
            put item (j+6) of curLvlObjects into spritey1
            if spritex0 is "" then
                answer (i && j && curLvlObjects)
            end if
            set the rect of cd btn ("glider_sprites" & i) to spritex0, spritey0, max(1,spritex1), max(1,spritey1)
            set the icon of cd btn ("glider_sprites" & i) to 0 -- invisible by default
            put item (j+1) of curLvlObjects into objtypename
            put item (j+7) of curLvlObjects into amount
            put item (j+9) of curLvlObjects into isOn
            if isOn is 1 then
                show cd btn ("glider_sprites" & i)
--~                 set the style of cd btn ("glider_sprites" & i) to "rectangle"
            else
                hide cd btn ("glider_sprites" & i)
            end if
            
            if objtypename is "flrVnt" then
                set the icon of cd btn ("glider_sprites" & i) to sprites_ventpatterny
                -- the event rect is different than the sprite rect. see tempInt := (boundRect.right + boundRect.left) div 2;
                put round((spritex0 + spritex1)/2) into tempInt
                set the rect of cd btn ("glider_sprites" & i) to tempInt - 8, amount, tempInt + 8, kFloorVert
            else if objtypename is "celVnt" then
                set the icon of cd btn ("glider_sprites" & i) to sprites_ventpatterny
                put round((spritex0 + spritex1)/2) into tempInt
                set the rect of cd btn ("glider_sprites" & i) to tempInt - 8, kCeilingVert, tempInt + 8, amount
            else if objtypename is "celDct" then
                set the icon of cd btn ("glider_sprites" & i) to sprites_ventpatterny
                put round((spritex0 + spritex1)/2) into tempInt
                set the rect of cd btn ("glider_sprites" & i) to tempInt - 8, kCeilingVert, tempInt + 8, amount
            else if objtypename is "lftFan" then
                set the rect of cd btn ("glider_sprites" & i) to amount, spritey0 + 10, spritex0, spritey0 + 30
            else if objtypename is "ritFan" then
                set the rect of cd btn ("glider_sprites" & i) to spritex1, spritey0 + 10, amount, spritey0 + 30
            else if objtypename is "guitar" then
--~                 set the rect of cd btn ("glider_sprites" & i) to spritex0+36, spritey0 + 24, spritex0+38, spritey1 -56
            else if objtypename is "upStar" then
                set the rect of cd btn ("glider_sprites" & i) to spritex0 + 32, spritey0, spritex1 - 32, spritey0 + 8
                set the height of cd btn  ("glider_sprites" & i) to 70+the height of cd btn  ("glider_sprites" & i)
                set the top of cd btn  ("glider_sprites" & i) to -30+the top of cd btn  ("glider_sprites" & i)
            else if objtypename is "dnStar" then
                set the rect of cd btn ("glider_sprites" & i) to spritex0 + 32, spritey1 - 8, spritex1 - 32, spritey1
                set the height of cd btn  ("glider_sprites" & i) to 60+the height of cd btn  ("glider_sprites" & i)
                set the top of cd btn  ("glider_sprites" & i) to -30+the top of cd btn  ("glider_sprites" & i)
            else if objtypename is "candle" then
                put round((spritex0 + spritex1)/2) into tempInt
				set the rect of cd btn ("glider_sprites" & i) to tempInt - 12, amount, tempInt + 4, spritey0
                
            else if objtypename is "outlet" then
                set the icon of cd btn ("glider_sprites" & i) to sprites_outlet
            else if objtypename is "clock" then
                set the icon of cd btn ("glider_sprites" & i) to sprites_clock
            else if objtypename is "battry" then
                set the icon of cd btn ("glider_sprites" & i) to sprites_battry
            else if objtypename is "paper" then
                set the icon of cd btn ("glider_sprites" & i) to sprites_paper
            
            -- bnsRct is a bonus rectangle
            else if objtypename is "litSwt" then
                set the icon of cd btn ("glider_sprites" & i) to sprites_litSwt
            else if objtypename is "grease" then
                set the icon of cd btn ("glider_sprites" & i) to sprites_grease
            else if objtypename is "rbrBnd" then
                set the icon of cd btn ("glider_sprites" & i) to sprites_rbrBnd
            else if objtypename is "drip" then
                set the icon of cd btn ("glider_sprites" & i) to sprites_drip
            else if objtypename is "shredr" then
                set the icon of cd btn ("glider_sprites" & i) to sprites_shredr
            else if objtypename is "ball" then
                set the icon of cd btn ("glider_sprites" & i) to sprites_ball
            else if objtypename is "fshBwl" then
                set the icon of cd btn ("glider_sprites" & i) to sprites_fshBwl
            else if objtypename is "pwrSwt" then
                set the icon of cd btn ("glider_sprites" & i) to sprites_pwrSwt
            else if objtypename is "thermo" then
                set the icon of cd btn ("glider_sprites" & i) to sprites_thermo
            else if objtypename is "toastr" then
                set the icon of cd btn ("glider_sprites" & i) to sprites_toastr
            else if objtypename is "teaKtl" then
                set the icon of cd btn ("glider_sprites" & i) to sprites_teaKtl
            else if objtypename is "macTsh" then
                set the icon of cd btn ("glider_sprites" & i) to sprites_macTsh
            end if
            
            set the width of cd btn ("glider_sprites" & i) to q + the width of cd btn ("glider_sprites" & i)
            set the height of cd btn ("glider_sprites" & i) to q + the height of cd btn ("glider_sprites" & i)
        end repeat
    end if
    
    if curLevel is not "needReset" and curLevel >= 1 then
        put line curLevel of lvlData into gcurlvldata
        put line curLevel of lvlObjects into gcurlvlObjects
    end if
end refreshOnLevelChange
